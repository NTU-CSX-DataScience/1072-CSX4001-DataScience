seg = cutter[str]
id = which(nchar(seg) > 1)
result = seg[id]
}
segment = apply(matrix(HCmessageAll$messageByName), 1, myFUN)
HCmessageAll$Page_Name[1]
HC1 = head(sort(table(segment[[1]]), decreasing=T), 20)
HC1
HCmessageAll$Page_Name[2]
HC2 = head(sort(table(segment[[2]]), decreasing=T), 20)
HC2
HCmessageAll$Page_Name[3]
HC3 = head(sort(table(segment[[3]]), decreasing=T), 20)
HC3
HCmessageAll$Page_Name[4]
HC4 = head(sort(table(segment[[4]]), decreasing=T), 20)
HC4
tempTAB_R = merge(x = HC1, y = HC2, by = "Var1", all = TRUE)
tempTAB_L = merge(x = HC3, y = HC4, by = "Var1", all = TRUE)
NewTAB = merge(x = tempTAB_R, y = tempTAB_L, by = "Var1", all = TRUE)
colnames(NewTAB) = c("words", HCmessageAll$Page_Name)
rownames(NewTAB) = NewTAB$words
NewTAB = NewTAB[,-1]
NewTAB[is.na(NewTAB)] <- 0
kable(NewTAB)
library(topicmodels)
chapters_lda <- LDA(NewTAB,k =4,control =list(seed =1234))
CoMatrix = as.matrix(NewTAB) %*% t(as.matrix(NewTAB))
total_occurrences <- rowSums(CoMatrix)
smallid = which(total_occurrences < median(total_occurrences))
co_occurrence_d = CoMatrix / total_occurrences
co_occurrence_s = co_occurrence_d[-as.vector(smallid),-as.vector(smallid)]
require(igraph)
graph <- graph.adjacency(round(co_occurrence_s*10),
mode="undirected",
diag=FALSE)
plot(graph,
vertex.label=names(data),
edge.arrow.mode=0,
vertex.size=1,
edge.width=E(graph)$weight,
layout=layout_with_fr)
needTag = c("n", "v", "a")
myPOS <- function(vec) {
TagName = names(vec)
id = NULL
for( i in length(needTag) ) {
temp = which(TagName == needTag[i])
id = c(id, temp)
}
result = vec[id]
}
posResult = lapply(segment, myPOS)
tempTAB_right = table(posResult[[1]])
tempTAB_left = table(posResult[[2]])
tempTAB_R = merge(x = tempTAB_right, y = tempTAB_left, by = "Var1", all = TRUE)
tempTAB_right = table(posResult[[3]])
tempTAB_left = table(posResult[[4]])
tempTAB_L = merge(x = tempTAB_right, y = tempTAB_left, by = "Var1", all = TRUE)
NewTAB = merge(x = tempTAB_R, y = tempTAB_L, by = "Var1", all = TRUE)
colnames(NewTAB) = c("words", HCmessageAll$Page_Name)
rownames(NewTAB) = NewTAB$words
NewTAB = NewTAB[,-1]
NewTAB[is.na(NewTAB)] <- 0
kable(NewTAB)
CoMatrix = as.matrix(NewTAB) %*% t(as.matrix(NewTAB))
total_occurrences <- rowSums(CoMatrix)
smallid = which(total_occurrences < median(total_occurrences))
co_occurrence_d = CoMatrix / total_occurrences
co_occurrence_s = co_occurrence_d[-as.vector(smallid),-as.vector(smallid)]
require(igraph)
graph <- graph.adjacency(round(co_occurrence_s*10),
mode="undirected",
diag=FALSE)
plot(graph,
vertex.label=names(data),
edge.arrow.mode=0,
vertex.size=1,
edge.width=E(graph)$weight,
layout=layout_with_fr)
chapters_lda
library(topicmodels)
chapters_lda <- LDA(NewTAB,k =4,control =list(seed =1234))
top_terms <- chapters_lda %>%  group_by(topic) %>%  top_n(5, beta) %>%  ungroup() %>%  arrange(topic, -beta)top_terms
library(topicmodels)
chapters_lda <- LDA(NewTAB,k =4,control =list(seed =1234))
dtm_topics <- tidy(chapters_lda, matrix = "beta")
library(topicmodels)
chapters_lda <- LDA(NewTAB,k =4,control =list(seed =1234))
library(tidytext)
dtm_topics <- tidy(chapters_lda, matrix = "beta")
top_terms <- dtm_topics %>%  group_by(topic) %>%  top_n(5, beta) %>%  ungroup() %>%  arrange(topic, -beta)top_terms
dtm_topics
? LDA
data("AssociatedPress", package = "topicmodels")
View(AssociatedPress[1:20,])
library(topicmodels)
chapters_lda <- LDA(t(NewTAB),k =4,control =list(seed =1234))
library(tidytext)
dtm_topics <- tidy(chapters_lda, matrix = "beta")
top_terms <- dtm_topics %>%  group_by(topic) %>%  top_n(5, beta) %>%  ungroup() %>%  arrange(topic, -beta)top_terms
dtm_topics
knitr::opts_chunk$set(echo = TRUE)
library(readr)
X201809_data <- read_csv("Data/201809_data.csv")
library(tidyverse)
VideoMatrix = filter(X201809_data, Type == "video")
Hvideo = filter(VideoMatrix, grepl("韓國瑜", VideoMatrix$Page_Name) == TRUE)
Cvideo = filter(VideoMatrix, grepl("陳其邁", VideoMatrix$Page_Name) == TRUE)
Hcomment = Hvideo[,c(2,13,15)]
Ccomment = Cvideo[,c(2,13,15)]
HCComment = rbind(Hcomment, Ccomment)
library(kableExtra)
kable(head(HCComment))
library(ggplot2)
ggplot() + geom_bar( data = HCComment, aes(x=Page_Name) )
ggplot() + geom_bar( data = HCComment,
aes(x=Page_Name, y=Comment_Count, group = Page_Name),
stat="identity")
HCmessage = HCComment %>% group_by(Page_Name) %>%
mutate(messageByName = paste0(Message, collapse = ""))
id = which(duplicated(HCmessage$Page_Name) == FALSE)
HCmessageAll = HCmessage[id,c(1,4)]
kable(head(HCmessageAll))
library(jiebaRD)
library(jiebaR)
cutter <- worker("tag")
# 自建字典
dic = c("韓國瑜", "國瑜", "高雄人")
new_user_word(cutter, dic)
myFUN<- function(str) {
str = gsub("[A-Za-z0-9]", "", str)
seg = cutter[str]
id = which(nchar(seg) > 1)
result = seg[id]
}
segment = apply(matrix(HCmessageAll$messageByName), 1, myFUN)
HCmessageAll$Page_Name[1]
HC1 = head(sort(table(segment[[1]]), decreasing=T), 20)
HC1
HCmessageAll$Page_Name[2]
HC2 = head(sort(table(segment[[2]]), decreasing=T), 20)
HC2
HCmessageAll$Page_Name[3]
HC3 = head(sort(table(segment[[3]]), decreasing=T), 20)
HC3
HCmessageAll$Page_Name[4]
HC4 = head(sort(table(segment[[4]]), decreasing=T), 20)
HC4
tempTAB_R = merge(x = HC1, y = HC2, by = "Var1", all = TRUE)
tempTAB_L = merge(x = HC3, y = HC4, by = "Var1", all = TRUE)
NewTAB = merge(x = tempTAB_R, y = tempTAB_L, by = "Var1", all = TRUE)
colnames(NewTAB) = c("words", HCmessageAll$Page_Name)
rownames(NewTAB) = NewTAB$words
NewTAB = NewTAB[,-1]
NewTAB[is.na(NewTAB)] <- 0
kable(NewTAB)
segment
segment %>% count(post, words)
segment
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
L = table(segment[[4]])
M_L = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM = merge(x = M_R, y = M_L, by = "Var1", all = TRUE)
library(topicmodels)
chapters_lda <- LDA(DTM, k =4, control =list(seed =1234))
View(DTM)
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
L = table(segment[[4]])
M_L = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM = merge(x = M_R, y = M_L, by = "Var1", all = TRUE)
DTM[is.na(DTM)] <- 0
library(topicmodels)
chapters_lda <- LDA(DTM, k =4, control =list(seed =1234))
View(DTM)
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
L = table(segment[[4]])
M_L = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM = merge(x = M_R, y = M_L, by = "Var1", all = TRUE)
DTM[is.na(DTM)] <- 0
rownames(DTM) = DTM$Var1
library(topicmodels)
chapters_lda <- LDA(DTM, k =4, control =list(seed =1234))
View(DTM)
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
L = table(segment[[4]])
M_L = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM = merge(x = M_R, y = M_L, by = "Var1", all = TRUE)
DTM[is.na(DTM)] <- 0
rownames(DTM) = DTM$Var1
DTM = DTM[,-1]
library(topicmodels)
chapters_lda <- LDA(DTM, k =4, control =list(seed =1234))
library(tidytext)
dtm_topics <- tidy(chapters_lda, matrix = "beta")
top_terms <- dtm_topics %>%  group_by(topic) %>%  top_n(5, beta) %>%  ungroup() %>%  arrange(topic, -beta)top_terms
View(DTM)
dtm_topics
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
L = table(segment[[4]])
M_L = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM = merge(x = M_R, y = M_L, by = "Var1", all = TRUE)
DTM[is.na(DTM)] <- 0
rownames(DTM) = DTM$Var1
DTM = DTM[,-1]
library(topicmodels)
chapters_lda <- LDA(t(DTM), k =4, control =list(seed =1234))
library(tidytext)
dtm_topics <- tidy(chapters_lda, matrix = "beta")
top_terms <- dtm_topics %>%  group_by(topic) %>%  top_n(5, beta) %>%  ungroup() %>%  arrange(topic, -beta)top_terms
dtm_topics
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
L = table(segment[[4]])
M_L = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM = merge(x = M_R, y = M_L, by = "Var1", all = TRUE)
DTM[is.na(DTM)] <- 0
rownames(DTM) = DTM$Var1
DTM = DTM[,-1]
library(topicmodels)
dtm_lda <- LDA(DTM, k = 8, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
L = table(segment[[4]])
M_L = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM = merge(x = M_R, y = M_L, by = "Var1", all = TRUE)
DTM[is.na(DTM)] <- 0
rownames(DTM) = DTM$Var1
DTM = DTM[,-1]
library(topicmodels)
dtm_lda <- LDA(t(DTM), k = 8, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
# 韓國瑜相關的 page 有三個
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
R = table(segment[[3]])
DTM_H = merge(x = M_R, y = R, by = "Var1", all = TRUE)
DTM_H[is.na(DTM_H)] <- 0
rownames(DTM_H) = DTM_H$Var1
DTM_H = DTM_H[,-1]
# 畫出韓國瑜發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_H), k = 4, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
# 陳其邁相關的 page 有一個
DTM_C = table(segment[[4]])
rownames(DTM_C) = DTM_C$Var1
View(DTM_C)
rownames(DTM_C)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
X201809_data <- read_csv("Data/201809_data.csv")
library(tidyverse)
VideoMatrix = filter(X201809_data, Type == "video")
Hvideo = filter(VideoMatrix, grepl("韓國瑜", VideoMatrix$Page_Name) == TRUE)
Cvideo = filter(VideoMatrix, grepl("陳其邁", VideoMatrix$Page_Name) == TRUE)
Hcomment = Hvideo[,c(2,13,15)]
Ccomment = Cvideo[,c(2,13,15)]
HCComment = rbind(Hcomment, Ccomment)
library(kableExtra)
kable(head(HCComment))
library(ggplot2)
ggplot() + geom_bar( data = HCComment, aes(x=Page_Name) )
ggplot() + geom_bar( data = HCComment,
aes(x=Page_Name, y=Comment_Count, group = Page_Name),
stat="identity")
HCmessage = HCComment %>% group_by(Page_Name) %>%
mutate(messageByName = paste0(Message, collapse = ""))
id = which(duplicated(HCmessage$Page_Name) == FALSE)
HCmessageAll = HCmessage[id,c(1,4)]
kable(head(HCmessageAll))
library(jiebaRD)
library(jiebaR)
cutter <- worker("tag")
# 自建字典
dic = c("韓國瑜", "國瑜", "高雄人")
new_user_word(cutter, dic)
myFUN<- function(str) {
str = gsub("[A-Za-z0-9]", "", str)
seg = cutter[str]
id = which(nchar(seg) > 1)
result = seg[id]
}
segment = apply(matrix(HCmessageAll$messageByName), 1, myFUN)
# 韓國瑜相關的 page 有三個
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM_H = merge(x = M_R, y = table(segment[[3]]), by = "Var1", all = TRUE)
DTM_H[is.na(DTM_H)] <- 0
rownames(DTM_H) = DTM_H$Var1
DTM_H = DTM_H[,-1]
# 畫出韓國瑜發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_H), k = 4, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
# 陳其邁相關的 page 有一個
DTM_C = table(segment[[4]])
rownames(DTM_C) = DTM_C$Var1
DTM_C
View(DTM_C)
# 韓國瑜相關的 page 有三個
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM_H = merge(x = M_R, y = table(segment[[3]]), by = "Var1", all = TRUE)
DTM_H[is.na(DTM_H)] <- 0
rownames(DTM_H) = DTM_H$Var1
DTM_H = DTM_H[,-1]
# 畫出韓國瑜發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_H), k = 4, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
# 陳其邁相關的 page 有一個
DTM_C = data.frame(table(segment[[4]]))
rownames(DTM_C) = DTM_C$Var1
DTM_C = DTM_C[,-1]
# 畫出陳其邁發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_C), k = 4, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
DTM_C
View(DTM_C)
# 陳其邁相關的 page 有一個
DTM_C = data.frame(table(segment[[4]]))
DTM_C
DTM_C$Var1
rownames(DTM_C) = DTM_C$Var1
DTM_C = DTM_C[,-1]
# 陳其邁相關的 page 有一個
DTM_C = data.frame(table(segment[[4]]))
rownames(DTM_C) = DTM_C$Var1
DTM = DTM_C$Freq
DTM
View(DTM)
# 韓國瑜相關的 page 有三個
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM_H = merge(x = M_R, y = table(segment[[3]]), by = "Var1", all = TRUE)
DTM_H[is.na(DTM_H)] <- 0
rownames(DTM_H) = DTM_H$Var1
DTM_H = DTM_H[,-1]
# 畫出韓國瑜發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_H), k = 4, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
# 陳其邁相關的 page 有一個
DTM_C = data.frame(table(segment[[4]]))
rownames(DTM_C) = DTM_C$Var1
# 畫出陳其邁發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_C), k = 4, control = list(seed = 1234))
# 韓國瑜相關的 page 有三個
R = table(segment[[1]])
L = table(segment[[2]])
M_R = merge(x = R, y = L, by = "Var1", all = TRUE)
DTM_H = merge(x = M_R, y = table(segment[[3]]), by = "Var1", all = TRUE)
DTM_H[is.na(DTM_H)] <- 0
rownames(DTM_H) = DTM_H$Var1
DTM_H = DTM_H[,-1]
# 畫出韓國瑜發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_H), k = 4, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
# 陳其邁相關的 page 有一個
DTM_C = merge(x = table(segment[[4]]), y = table(segment[[3]]), by = "Var1", all = TRUE)
DTM_C[is.na(DTM_C)] <- 0
rownames(DTM_C) = DTM_C$Var1
DTM_C = DTM_C[,-1]
# 畫出陳其邁發文的主題歸納
library(topicmodels)
dtm_lda <- LDA(t(DTM_C), k = 4, control = list(seed = 1234))
library(tidytext)
dtm_topics <- tidy(dtm_lda, matrix = "beta")
top_terms <- dtm_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y=element_text(colour="black", family="Heiti TC Light"))
